[core]
    excludesfile = "~/.gitignore"
    pager = less -r
    editor = vim

[user]
	name = Jakob Voss
	email = voss@gbv.de

[color]
    ui = auto
	interactive = auto

[log]
    # always include tags and references
	decorate = full

[alias]
    s = status --short -uno
    co = checkout
    br = branch
    l = log --oneline 
    ls = log --pretty=format:'%C(yellow)%h% %C(green) %ad%Cred%d %Creset%s %C(bold blue)%cn%C(reset)' --date=short
    la = log --pretty=format:'%C(yellow)%h% %C(green) %ad%Cred%d %Creset%s %C(bold blue)%cn%C(reset)' --stat
    pl = pull --rebase

    # show all commits and branches in a comprehensive overview (TODO: add author).
    graph = log --all --graph --oneline -n30
    
    g = log --all --graph --pretty=format:'%C(yellow)%h%Creset%C(red)%d%Creset %s %Cgreen(%cr) %C(bold blue)%an%Creset' --abbrev-commit --date=relative

    # always use word-diff
    diff = diff --word-diff

    # add to the last commit without changing commit message
    amend = commit --amend --no-edit

    # track all remote branches and get all remote tags
    trackall = !~/bin/git-trackall

    # clone from a known user/repository at GitHub
    ghclone = "!sh -c \"git clone git@github.com:$1/$2.git $GIT_PREFIX$2\""
    # clone branch from Debian Perl packages
    perldebclone = "!sh -c \"git clone -b debian ssh://git.debian.org/git/pkg-perl/packages/$1.git\""

    # show all unpushed work
	ok = "!sh -c \"git status --short; git log --branches --not --remotes --simplify-by-decoration --decorate --oneline; git stash list\""

[diff]
    # enable copy detection
    renames = copies


[push]
	default = simple
